{
  "name": "ddd-forum",
  "version": "1.0.0",
  "description": "Learn how to build a hacker news-type app with TypeScript & DDD",
  "main": "index.js",
  "scripts": {
    "build:public": "cd public/app && npm run build",
    "start:public": "cd public/app && npm run start",
    "build": "rimraf ./dist && tsc",
    "db:create:dev": "cross-env NODE_ENV=development node scripts/db/create",
    "db:create:test": "cross-env NODE_ENV=test node scripts/db/create",
    "db:delete:dev": "cross-env NODE_ENV=development node scripts/db/delete",
    "db:seed15:dev": "cross-env NODE_ENV=development node scripts/db/seed-us015",
    "db:seed16:dev": "cross-env NODE_ENV=development node scripts/db/seed-us016",
    "db:seed14:dev": "cross-env NODE_ENV=development node scripts/db/seed-us014",
    "db:seedacc:dev": "cross-env NODE_ENV=development node src/db_test_env_prep/acc_test/seed-acc",
    "db:seednonfunc:dev": "cross-env NODE_ENV=development node src/db_test_env_prep/non_func_test/seed-non-func",
    "db:delete:test": "cross-env NODE_ENV=test node scripts/db/delete",
    "db:flush:dev": "cross-env NODE_ENV=development npm run db:delete:dev && npm run db:create:dev",
    "db:delete:create:migrate:dev": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev",
    "db:flush:test": "cross-env NODE_ENV=test npm run db:delete:test && npm run db:create:test",
    "migrate:dev": "npm run build && cross-env NODE_ENV=development dotenv -e .env sequelize db:migrate",
    "migrate:test": "npm run build && cross-env NODE_ENV=test dotenv -e .env sequelize db:migrate --env test",
    "migrate:prod": "sequelize db:migrate --env production",
    "setup:dev": "npm install && npm run db:create:dev && npm run migrate:dev && cd public/app && npm install",
    "start:dev": "cross-env NODE_ENV=development nodemon",
    "start:both": "concurrently --kill-others-on-fail \"npm run start:dev\" \"npm run  start:public\"",
    "prestart": "npm run migrate:prod",
    "start": "node dist/index",
    "test": "jest --verbose",
    "test:dev": "jest --watchAll",
    "testWithCoverage": "jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\"",
    "test:api": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"html\" --runInBand --testPathPattern=api",
    "test:clear": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev",
    "test:api:us001": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us001",
    "test:api:us002": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us002",
    "test:api:us003": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us003",
    "test:api:us004": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us004",
    "test:api:us005": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us005",
    "test:api:us006": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us006",
    "test:api:us007": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us007",
    "test:api:us008": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us008",
    "test:api:us009": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us009",
    "test:api:us010": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us010",
    "test:api:global": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/global",
    "test:api:forum": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seedacc:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/forum",
    "test:api:users": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/users",
    "test:api:dummy-user": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=func_test/dummy-user",
    "test:api:us001.bug": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/bug_test/us001.bug",
    "test:api:us004.bug": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/bug_test/us004.bug",
    "test:api:us005.bug": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/bug_test/us005.bug",
    "test:api:us007.bug": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/bug_test/us007.bug",
    "test:api:us008.bug": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/bug_test/us008.bug",
    "test:api:us011": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/bug_test/us011",
    "test:api:us011.1": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us011.1",
    "test:api:us012": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seedacc:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us012",
    "test:api:us013": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us013",
    "test:api:us014": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seed14:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us014",
    "test:api:us015": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seed15:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us015",
    "test:api:us016": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seed16:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us016",
    "test:api:us017": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us017",
    "test:api:us018": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seedacc:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us018",
    "test:api:us019": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seedacc:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us019",
    "test:api:us020": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seedacc:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us020",
    "test:api:us030": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\" --runInBand --testPathPattern=api_test/us030",
    "test:api:regression": "npm run test:api:us001 && npm run test:api:us001.bug && npm run test:api:us002 && npm run test:api:us004 && npm run test:api:us004.bug && npm run test:api:us005 && npm run test:api:us005.bug && npm run test:api:us006 && npm run test:api:us007 && npm run test:api:us007.bug && npm run test:api:us008 && npm run test:api:us008.bug && npm run test:api:us009 && npm run test:api:us010 && npm run test:api:us011.1 && npm run test:api:us012 && npm run test:api:us013 && npm run test:api:us014 && npm run test:api:us015 && npm run test:api:us016 && npm run test:api:us018 && npm run test:api:us019 && npm run test:api:us020 && npm run test:api:us030",
    "prettier-watch": "onchange \"**/*\" -- prettier --write --ignore-unknown {{changed}}",
    "prettier": "--ignore-path .gitignore",
    "prepare": "husky install",
    "precommit": "lint-staged",
    "generateDocumentation": "npx typedoc",
    "smokeTestCurl": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && node src/smoke_test/smoke-test.js",
    "smokeTestNewman": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && node src/smoke_test/DDDForum.postman_collection.js",
    "lint": "tslint -p tsconfig.json \"src/**/*.{ts,js}\"",
    "nonFuncTest10Users": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seednonfunc:dev && node src/non_fun_test/script10Users.js",
    "nonFuncTest50Users": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seednonfunc:dev && node src/non_fun_test/script50Users.js",
    "nonFuncTest100Users": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seednonfunc:dev && node src/non_fun_test/script100Users.js",
    "nonFuncTest200Users": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seednonfunc:dev && node src/non_fun_test/script200Users.js",
    "nonFuncTest": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && npm run db:seednonfunc:dev && node src/non_fun_test/scriptNumberUsers.js"
  },
  "config": {
    "number_users": "default_value"
  },
  "lint-staged": {
    "src/**/*.ts": [
      "prettier --write"
    ],
    "public/**/*.tsx": [
      "prettier --write"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stemmlerjs/ddd-forum.git"
  },
  "keywords": [
    "ddd",
    "typescript"
  ],
  "author": "Khalil Stemmler <khalil@khalilstemmler.com>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/stemmlerjs/ddd-forum/issues"
  },
  "homepage": "https://github.com/stemmlerjs/ddd-forum#readme",
  "dependencies": {
    "@types/express": "^4.17.1",
    "@types/jest": "^24.0.18",
    "@types/lodash": "^4.14.141",
    "@types/node": "^12.7.8",
    "@types/psl": "^1.1.3",
    "@types/validator": "^13.11.7",
    "apollo-server-express": "^2.11.0",
    "axios": "^0.21.4",
    "bcrypt-nodejs": "0.0.3",
    "body-parser": "^1.19.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "cross-env": "^6.0.3",
    "dompurify": "^2.0.6",
    "dotenv": "^8.1.0",
    "express": "^4.17.1",
    "express-rate-limit": "^5.0.0",
    "graphql-iso-date": "^3.6.1",
    "helmet": "^3.21.1",
    "jest": "^24.9.0",
    "jmeter": "0.0.1",
    "jsdom": "^15.1.1",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.15",
    "morgan": "^1.9.1",
    "mysql": "^2.17.1",
    "mysql2": "^1.7.0",
    "nodemon": "^1.19.3",
    "openai": "^3.3.0",
    "rand-token": "^0.4.0",
    "react-quill": "^1.3.3",
    "redis": "^2.8.0",
    "rimraf": "^3.0.0",
    "sequelize": "^5.19.2",
    "sequelize-cli": "^5.5.1",
    "sinon": "^7.5.0",
    "sinon-chai": "^3.3.0",
    "slug": "^1.1.0",
    "ts-jest": "^24.1.0",
    "ts-node": "^8.4.1",
    "tslog": "3.2.2",
    "typescript": "^3.6.3",
    "validator": "^11.1.0",
    "yaml": "^1.10.2"
  },
  "devDependencies": {
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "concurrently": "^5.0.0",
    "dotenv-cli": "^5.1.0",
    "husky": "^8.0.0",
    "jest-html-reporter": "^3.0.0",
    "lint-staged": "^12.0.0",
    "newman": "^6.0.0",
    "prettier": "^2.6.0",
    "tslint": "^6.1.3",
    "typedoc": "^0.21.10"
  },
  "jest": {
    "testEnvironment": "node",
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "coverageReporters": [
      "json",
      "lcov",
      "text",
      "clover"
    ],
    "coverageDirectory": "coverage",
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.ts"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/"
    ],
    "reporters": [
      "default",
      [
        "jest-html-reporters",
        {
          "publicPath": "./reports",
          "filename": "report.html",
          "expand": true
        }
      ]
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/dist/"
    ]
  }
}
