@startuml SD-creta comment to comment
autonumber "<b>(0)"
title US008 SD - Comment a comment
actor User
participant Routes
participant "replytoCommentController:ReplytoCommentController" as ReplytoCommentController
Participant "useCase:ReplytoComment" as ReplytoCommentUseCase
participant "menberRepo:replytoComment" as IMemberRepo
participant "member: Member" as Member
participant "slug: PostSlug" as PostSlug
participant "postRepo:replytoComment" as IPostRepo
participant "commentRepo: replytoComment" as ICommentRepo
participant "comment: Comment" as Comment

participant "commentText: CommentText" as CommentText
participant "post: Post" as Post
database MySQL as database

User -> Routes:  call Endpoint (method: POST, route: "/", header: "Authorization", )
activate Routes
Routes -> ReplytoCommentController: .execute(req, res)
activate ReplytoCommentController
ReplytoCommentController ->ReplytoCommentController: .executeImpl(req, res)
ReplytoCommentController -> ReplytoCommentUseCase: .execute(dto)
activate ReplytoCommentUseCase 
ReplytoCommentUseCase -> IPostRepo: .getPostBySlug(slug.value)
activate IPostRepo
IPostRepo -> Post: .getPostBySlug(slug.value)
activate Post
Post --> IPostRepo: post
deactivate Post
IPostRepo --> ReplytoCommentUseCase: post
deactivate IPostRepo
ReplytoCommentUseCase-> IMemberRepo:  .getMemberByUserId (userId)
activate IMemberRepo
IMemberRepo -> Member: .getMemberByUserId (userId)
activate Member
Member --> IMemberRepo:  Member
deactivate Member
IMemberRepo --> ReplytoCommentUseCase:  Member
deactivate IMemberRepo
ReplytoCommentUseCase -> ICommentRepo: getParentComment(commentId)
activate ICommentRepo
ICommentRepo -> Comment: getCommentByCommentId(commentId)
activate Comment
Comment --> ICommentRepo: comment
deactivate Comment
ICommentRepo --> ReplytoCommentUseCase: comment
deactivate ICommentRepo
ReplytoCommentUseCase -> PostSlug:.createFromExisting (req.slug)
activate PostSlug
PostSlug --> ReplytoCommentUseCase: .isFailure (SlugorError)
deactivate PostSlug
ReplytoCommentUseCase -> CommentText: .create(value: req.comment);
activate CommentText
CommentText --> ReplytoCommentUseCase: commentOrError.isFailure
deactivate CommentText
ReplytoCommentUseCase -> Comment: .create();
activate Comment
Comment --> ReplytoCommentUseCase: commentOrError.isFailure
deactivate Comment
ReplytoCommentUseCase -> Post: addComment(comment)
activate Post
Post --> database: Save comment to database
deactivate Post
deactivate Routes
deactivate ReplytoCommentController
deactivate ReplytoCommentUseCase
@enduml

